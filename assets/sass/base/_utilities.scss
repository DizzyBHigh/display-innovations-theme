// Center block element
//
// make sure $size-content-max is declared
// $size-default-width set in /assets/scss/base/_variables.scss
//
// @param {string} $max - maximum width for block element
@mixin center($max: $size-default-width) {
	display: block;
	margin-left: auto;
	margin-right: auto;
	max-width: $max;
	width: 100%;
}

// Describe all psuedo state classes
@mixin hover {
	&:active, &:focus, &:hover {
		@content;
	}
}

// Rem output with px fallback
//
// Necessary if supporting < IE9, and recommended if supporting < IE11
// Uses rem-calc from Foundation and adds pixel fallback.
// Can be used for any property, defaults to font-size
//
// @param {int} $value - pixel value of element size
// @param {string} $property - css property
// @param {string} $base-value - base pixel value for rem conversion
// @requires $value
@mixin rem-fallback($value, $property: 'font-size', $base-value: $rem-base){
	#{$property}: $value + px;
	#{$property}: rem-calc($value, $base-value: $rem-base);
}

// Reset our ul/ol lists
@mixin reset-list {
	list-style: none;
	margin-left: 0;
	margin-bottom: 0;
}

// z-index management
$layers: (
	nav: 1,
	header: 2
);

@mixin z-index($layer-name) {
  z-index: map-get($layers, $layer-name);
};

// Screen reader
@mixin screen-reader-text {
	position: absolute;
	top: -9999px;
	left: -9999px;
}

// Helper class in case we need to use it via our markup
.screen-reader-text {
	@include screen-reader-text;
}

